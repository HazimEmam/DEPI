---
- name: Setup Common Tasks and Master Node
  hosts: master
  become: yes
  tasks:
    # --- Common Tasks ---
    - name: Disable UFW (Uncomplicated Firewall)
      ufw:
        state: disabled

    - name: Disable swap on all nodes
      shell: |
        swapoff -a
        sed -i '/swap/d' /etc/fstab

    - name: Create containerd-install.sh script on all nodes
      copy:
        dest: /usr/local/bin/containerd-install.sh
        content: |
          #!/bin/sh
          echo "Make script executable using chmod u+x FILE_NAME.sh"
          echo "Containerd installation script"
          echo "Instructions from https://kubernetes.io/docs/setup/production-environment/container-runtimes/"
          cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
          overlay
          br_netfilter
          EOF
          sudo modprobe overlay
          sudo modprobe br_netfilter
          cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
          EOF
          sudo sysctl --system
          sudo apt-get update
          sudo apt-get -y install containerd
          sudo mkdir -p /etc/containerd
          sudo containerd config default | sudo tee /etc/containerd/config.toml
          sudo systemctl restart containerd

    - name: Make containerd-install.sh executable
      file:
        path: /usr/local/bin/containerd-install.sh
        mode: '0755'

    - name: Run containerd-install.sh script on all nodes
      command: /usr/local/bin/containerd-install.sh

    - name: Create k8s-install.sh script on all nodes
      copy:
        dest: /usr/local/bin/k8s-install.sh
        content: |
          #!/bin/sh
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl gpg
          curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --yes --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
          echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubelet kubeadm kubectl
          sudo apt-mark hold kubelet kubeadm kubectl

    - name: Make k8s-install.sh executable
      file:
        path: /usr/local/bin/k8s-install.sh
        mode: '0755'

    - name: Run k8s-install.sh script on all nodes
      command: /usr/local/bin/k8s-install.sh

    - name: Ensure SystemdCg is set to true in /etc/containerd/config.toml
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^SystemdCg'
        line: 'SystemdCg = true'
        state: present

    - name: Restart containerd service
      service:
        name: containerd
        state: restarted

    - name: Restart kubelet service if it exists
      service:
        name: kubelet
        state: restarted
      ignore_errors: true  # Ignore if kubelet is not found

    # --- Master Node Specific Tasks ---
    - name: Initialize Kubernetes Cluster with kubeadm
      shell: |
        kubeadm init --control-plane-endpoint="192.168.31.144:6443" --upload-certs --pod-network-cidr=192.168.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Create .kube directory
      file:
        path: /home/ansible/.kube
        state: directory
        mode: '0755'
        owner: ansible
        group: ansible

    - name: Copy admin.conf to kube config
      command: cp /etc/kubernetes/admin.conf /home/ansible/.kube/config
      become: yes

    - name: Change ownership of kube config
      file:
        path: /home/ansible/.kube/config
        owner: ansible
        group: ansible
        mode: '0644'

    - name: Apply Weave Net CNI
      command: kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml --validate=false
      become: yes
      register: result
      retries: 5
      delay: 10
      until: result.rc == 0